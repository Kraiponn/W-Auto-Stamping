C L "MAIN" 0 216 6 "FUNCTION"
D G "__PCH__" 0 382 ""4.049""
D G "__DEVICE__" 0 382 "8720"
D G "__DATE__" 0 382 ""17-Á.¤.-13""
D G "__TIME__" 0 382 ""10:49:05"" "*****************************************************************************\"
d G "PIN_A0" 2 22 "31744"
d G "PIN_A1" 2 23 "31745"
d G "PIN_A2" 2 24 "31746"
d G "PIN_A3" 2 25 "31747"
d G "PIN_A4" 2 26 "31748"
d G "PIN_A5" 2 27 "31749"
d G "PIN_A6" 2 28 "31750"
d G "PIN_B0" 2 30 "31752"
d G "PIN_B1" 2 31 "31753"
d G "PIN_B2" 2 32 "31754"
d G "PIN_B3" 2 33 "31755"
d G "PIN_B4" 2 34 "31756"
d G "PIN_B5" 2 35 "31757"
d G "PIN_B6" 2 36 "31758"
d G "PIN_B7" 2 37 "31759"
d G "PIN_C0" 2 39 "31760"
d G "PIN_C1" 2 40 "31761"
d G "PIN_C2" 2 41 "31762"
d G "PIN_C3" 2 42 "31763"
d G "PIN_C4" 2 43 "31764"
d G "PIN_C5" 2 44 "31765"
d G "PIN_C6" 2 45 "31766"
d G "PIN_C7" 2 46 "31767"
d G "PIN_D0" 2 48 "31768"
d G "PIN_D1" 2 49 "31769"
d G "PIN_D2" 2 50 "31770"
d G "PIN_D3" 2 51 "31771"
d G "PIN_D4" 2 52 "31772"
d G "PIN_D5" 2 53 "31773"
d G "PIN_D6" 2 54 "31774"
d G "PIN_D7" 2 55 "31775"
d G "PIN_E0" 2 57 "31776"
d G "PIN_E1" 2 58 "31777"
d G "PIN_E2" 2 59 "31778"
d G "PIN_E3" 2 60 "31779"
d G "PIN_E4" 2 61 "31780"
d G "PIN_E5" 2 62 "31781"
d G "PIN_E6" 2 63 "31782"
d G "PIN_E7" 2 64 "31783"
d G "PIN_F0" 2 66 "31784"
d G "PIN_F1" 2 67 "31785"
d G "PIN_F2" 2 68 "31786"
d G "PIN_F3" 2 69 "31787"
d G "PIN_F4" 2 70 "31788"
d G "PIN_F5" 2 71 "31789"
d G "PIN_F6" 2 72 "31790"
d G "PIN_F7" 2 73 "31791"
d G "PIN_G0" 2 75 "31792"
d G "PIN_G1" 2 76 "31793"
d G "PIN_G2" 2 77 "31794"
d G "PIN_G3" 2 78 "31795"
d G "PIN_G4" 2 79 "31796"
d G "PIN_H0" 2 81 "31800"
d G "PIN_H1" 2 82 "31801"
d G "PIN_H2" 2 83 "31802"
d G "PIN_H3" 2 84 "31803"
d G "PIN_H4" 2 85 "31804"
d G "PIN_H5" 2 86 "31805"
d G "PIN_H6" 2 87 "31806"
d G "PIN_H7" 2 88 "31807"
d G "PIN_J0" 2 90 "31808"
d G "PIN_J1" 2 91 "31809"
d G "PIN_J2" 2 92 "31810"
d G "PIN_J3" 2 93 "31811"
d G "PIN_J4" 2 94 "31812"
d G "PIN_J5" 2 95 "31813"
d G "PIN_J6" 2 96 "31814"
d G "PIN_J7" 2 97 "31815"
d G "FALSE" 2 100 "0"
d G "TRUE" 2 101 "1"
d G "BYTE" 2 103 "int8"
d G "BOOLEAN" 2 104 "int1"
d G "getc" 2 106 "getch"
d G "fgetc" 2 107 "getch"
d G "getchar" 2 108 "getch"
d G "putc" 2 109 "putchar"
d G "fputc" 2 110 "putchar"
d G "fgets" 2 111 "gets"
d G "fputs" 2 112 "puts"
d G "WDT_TIMEOUT" 2 118 "7"
d G "MCLR_FROM_SLEEP" 2 119 "11"
d G "MCLR_FROM_RUN" 2 120 "15"
d G "NORMAL_POWER_UP" 2 121 "12"
d G "BROWNOUT_RESTART" 2 122 "14"
d G "WDT_FROM_SLEEP" 2 123 "3"
d G "RESET_INSTRUCTION" 2 124 "0"
d G "RTCC_INTERNAL" 2 131 "0"
d G "RTCC_EXT_L_TO_H" 2 132 "32"
d G "RTCC_EXT_H_TO_L" 2 133 "48"
d G "RTCC_DIV_1" 2 135 "8"
d G "RTCC_DIV_2" 2 136 "0"
d G "RTCC_DIV_4" 2 137 "1"
d G "RTCC_DIV_8" 2 138 "2"
d G "RTCC_DIV_16" 2 139 "3"
d G "RTCC_DIV_32" 2 140 "4"
d G "RTCC_DIV_64" 2 141 "5"
d G "RTCC_DIV_128" 2 142 "6"
d G "RTCC_DIV_256" 2 143 "7"
d G "RTCC_OFF" 2 145 "0x80"
d G "RTCC_8_BIT" 2 147 "0x40"
d G "WDT_ON" 2 157 "0x100"
d G "WDT_OFF" 2 158 "0"
d G "T1_DISABLED" 2 165 "0"
d G "T1_INTERNAL" 2 166 "0x85"
d G "T1_EXTERNAL" 2 167 "0x87"
d G "T1_EXTERNAL_SYNC" 2 168 "0x83"
d G "T1_CLK_OUT" 2 170 "8"
d G "T1_DIV_BY_1" 2 172 "0"
d G "T1_DIV_BY_2" 2 173 "0x10"
d G "T1_DIV_BY_4" 2 174 "0x20"
d G "T1_DIV_BY_8" 2 175 "0x30"
d G "T2_DISABLED" 2 180 "0"
d G "T2_DIV_BY_1" 2 181 "4"
d G "T2_DIV_BY_4" 2 182 "5"
d G "T2_DIV_BY_16" 2 183 "6"
d G "T3_DISABLED" 2 189 "0"
d G "T3_INTERNAL" 2 190 "0x85"
d G "T3_EXTERNAL" 2 191 "0x87"
d G "T3_EXTERNAL_SYNC" 2 192 "0x83"
d G "T3_DIV_BY_1" 2 194 "0"
d G "T3_DIV_BY_2" 2 195 "0x10"
d G "T3_DIV_BY_4" 2 196 "0x20"
d G "T3_DIV_BY_8" 2 197 "0x30"
d G "T4_DISABLED" 2 202 "0"
d G "T4_DIV_BY_1" 2 203 "4"
d G "T4_DIV_BY_4" 2 204 "5"
d G "T4_DIV_BY_16" 2 205 "6"
d G "CCP_OFF" 2 211 "0"
d G "CCP_CAPTURE_FE" 2 212 "4"
d G "CCP_CAPTURE_RE" 2 213 "5"
d G "CCP_CAPTURE_DIV_4" 2 214 "6"
d G "CCP_CAPTURE_DIV_16" 2 215 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 216 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 217 "9"
d G "CCP_COMPARE_INT" 2 218 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 219 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 220 "0xB"
d G "CCP_PWM" 2 221 "0xC"
d G "CCP_PWM_PLUS_1" 2 222 "0x1c"
d G "CCP_PWM_PLUS_2" 2 223 "0x2c"
d G "CCP_PWM_PLUS_3" 2 224 "0x3c"
d G "CCP_USE_TIMER3" 2 225 "0x100"
v G "CCP_1" 2 226 "int16"
v G "CCP_2" 2 230 "int16"
v G "CCP_3" 2 234 "int16"
v G "CCP_4" 2 238 "int16"
v G "CCP_5" 2 242 "int16"
d G "T3_CCP1_TO_5" 2 248 "0x48"
d G "T3_CCP2_TO_5" 2 249 "0x8"
d G "T3_CCP3_TO_5" 2 250 "0x40"
d G "PSP_ENABLED" 2 257 "0x10"
d G "PSP_DISABLED" 2 258 "0"
d G "SPI_MASTER" 2 265 "0x20"
d G "SPI_SLAVE" 2 266 "0x24"
d G "SPI_L_TO_H" 2 267 "0"
d G "SPI_H_TO_L" 2 268 "0x10"
d G "SPI_CLK_DIV_4" 2 269 "0"
d G "SPI_CLK_DIV_16" 2 270 "1"
d G "SPI_CLK_DIV_64" 2 271 "2"
d G "SPI_CLK_T2" 2 272 "3"
d G "SPI_SS_DISABLED" 2 273 "1"
d G "SPI_SAMPLE_AT_END" 2 275 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 276 "0x4000"
d G "UART_ADDRESS" 2 282 "2"
d G "UART_DATA" 2 283 "4"
d G "F6_F5_F4_F5" 2 287 "0x70ff04"
d G "F6_F5_F4_F3_OUT_ON_F2_F1" 2 288 "0x78F903"
d G "F6_F5_F4_F5_OUT_ON_F2_F1" 2 289 "0x70F905"
d G "NC_NC_NC_NC" 2 290 "0x00ff07"
d G "F6_F5_F4_F3" 2 291 "0x78ff02"
d G "F6_F5_NC_NC_OUT_ON_F2" 2 292 "0x60FB01"
d G "F6_VR_F4_VR" 2 293 "0x50ff06"
d G "F5_VR_F3_VR" 2 294 "0x28ff0e"
d G "VREF_LOW" 2 302 "0xa0"
d G "VREF_HIGH" 2 303 "0x80"
d G "VREF_F5" 2 305 "0x40"
d G "VREF_COMP" 2 306 "0x10"
d G "LVD_LVDIN" 2 311 "0x1F"
d G "LVD_46" 2 312 "0x1E"
d G "LVD_43" 2 313 "0x1D"
d G "LVD_41" 2 314 "0x1C"
d G "LVD_40" 2 315 "0x1B"
d G "LVD_37" 2 316 "0x1A"
d G "LVD_36" 2 317 "0x19"
d G "LVD_34" 2 318 "0x18"
d G "LVD_31" 2 319 "0x17"
d G "LVD_29" 2 320 "0x16"
d G "LVD_28" 2 321 "0x15"
d G "LVD_26" 2 322 "0x14"
d G "LVD_25" 2 323 "0x13"
d G "LVD_23" 2 324 "0x12"
d G "LVD_21" 2 325 "0x11"
d G "OSC_TIMER1" 2 331 "1"
d G "OSC_NORMAL" 2 332 "0"
d G "EXTMEM_BYTE_WRITE" 2 339 "0"
d G "EXTMEM_BYTE_SELECT" 2 340 "1"
d G "EXTMEM_WORD_WRITE" 2 341 "2"
d G "EXTMEM_DISABLE" 2 342 "0x80"
d G "EXTMEM_WAIT_0" 2 344 "0x30"
d G "EXTMEM_WAIT_1" 2 345 "0x20"
d G "EXTMEM_WAIT_2" 2 346 "0x10"
d G "EXTMEM_WAIT_3" 2 347 "0x00" "Default"
d G "ADC_OFF" 2 354 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 355 "0x100"
d G "ADC_CLOCK_DIV_4" 2 356 "0x04"
d G "ADC_CLOCK_DIV_8" 2 357 "0x01"
d G "ADC_CLOCK_DIV_16" 2 358 "0x05"
d G "ADC_CLOCK_DIV_32" 2 359 "0x02"
d G "ADC_CLOCK_DIV_64" 2 360 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 361 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 2 364 "0x0F" "None"
d G "ALL_ANALOG" 2 365 "0x00" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6 H4 H5 H6 H7"
d G "AN0_TO_AN13" 2 366 "0x01" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6 H4 H5"
d G "AN0_TO_AN12" 2 367 "0x02" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6 H4"
d G "AN0_TO_AN11" 2 368 "0x03" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6"
d G "AN0_TO_AN10" 2 369 "0x04" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5"
d G "AN0_TO_AN9" 2 370 "0x05" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4"
d G "AN0_TO_AN8" 2 371 "0x06" "A0 A1 A2 A3 A5 F0 F1 F2 F3"
d G "AN0_TO_AN7" 2 372 "0x07" "A0 A1 A2 A3 A5 F0 F1 F2"
d G "AN0_TO_AN6" 2 373 "0x08" "A0 A1 A2 A3 A5 F0 F1"
d G "AN0_TO_AN5" 2 374 "0x09" "A0 A1 A2 A3 A5 F0"
d G "AN0_TO_AN4" 2 375 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 376 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 377 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 378 "0x0D" "A0 A1"
d G "AN0" 2 379 "0x0E" "A0"
d G "ANALOG_AN0_TO_AN13" 2 380 "0x01" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN12" 2 381 "0x02" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN11" 2 382 "0x03" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN10" 2 383 "0x04" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN9" 2 384 "0x05" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN8" 2 385 "0x06" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN7" 2 386 "0x07" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN6" 2 387 "0x08" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN5" 2 388 "0x09" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN4" 2 389 "0x0A" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN3" 2 390 "0x0B" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN2" 2 391 "0x0C" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN1" 2 392 "0x0D" "!old only provided for compatibility"
d G "ANALOG_AN0" 2 393 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 396 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 397 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 398 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 399 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 403 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 404 "1"
d G "ADC_READ_ONLY" 2 405 "6"
d G "L_TO_H" 2 417 "0x40"
d G "H_TO_L" 2 418 "0"
d G "GLOBAL" 2 420 "0xF2C0"
d G "INT_RTCC" 2 421 "0xF220"
d G "INT_TIMER0" 2 422 "0xF220"
d G "INT_TIMER1" 2 423 "0x9D01"
d G "INT_TIMER2" 2 424 "0x9D02"
d G "INT_TIMER3" 2 425 "0xA002"
d G "INT_EXT" 2 426 "0xF210"
d G "INT_EXT1" 2 427 "0xF008"
d G "INT_EXT2" 2 428 "0xF010"
d G "INT_RB" 2 429 "0xFFF208"
d G "INT_PSP" 2 430 "0x9D80"
d G "INT_AD" 2 431 "0x9D40"
d G "INT_RDA" 2 432 "0x9D20"
d G "INT_TBE" 2 433 "0x9D10"
d G "INT_SSP" 2 434 "0x9D08"
d G "INT_CCP1" 2 435 "0x9D04"
d G "INT_CCP2" 2 436 "0xA001"
d G "INT_BUSCOL" 2 437 "0xA008"
d G "INT_LOWVOLT" 2 438 "0xA004"
d G "INT_COMP" 2 439 "0xA040"
d G "INT_EEPROM" 2 440 "0xA010"
d G "INT_RDA2" 2 441 "0xA320"
d G "INT_TBE2" 2 442 "0xA310"
d G "INT_TIMER4" 2 443 "0xA308"
d G "INT_CCP3" 2 444 "0xA301"
d G "INT_CCP4" 2 445 "0xA302"
d G "INT_CCP5" 2 446 "0xA304"
d G "INT_EXT3" 2 447 "0xF020"
D G "Tx1" 1 39 "PIN_C6" "-- Pin interface Computer"
D G "Rx1" 1 40 "PIN_C7"
D G "Tx2" 1 41 "PIN_G1"
D G "Rx2" 1 42 "PIN_G2"
D G "SPD_115200" 1 43 "115200"
D G "SPD_38400" 1 44 "38400"
D G "SPD_19200" 1 45 "19200"
D G "SPD_9600" 1 46 "9600"
D G "SW_ID" 1 47 "0x70"
D G "RELAY" 1 51 "PIN_A3"
D G "TRIG" 1 52 "PIN_C0"
D G "SV_SLIDER" 1 54 "PIN_D0"
D G "SV_LOCK" 1 55 "PIN_D1"
D G "SV_STAMP" 1 56 "PIN_D2"
D G "SV_QR" 1 57 "PIN_D3"
D G "SV_COILS" 1 58 "PIN_D4"
D G "SV_SCREW" 1 59 "PIN_D5"
D G "LED_START" 1 61 "PIN_D7"
D G "BUZZER" 1 62 "PIN_E1"
D G "LEDG" 1 63 "PIN_E2"
D G "LEDR" 1 64 "PIN_E3"
D G "SW_RES" 1 68 "PIN_B0"
D G "SW_START" 1 69 "PIN_B1"
D G "SS_LOCK" 1 70 "PIN_B2"
D G "SS_UNLOCK" 1 72 "PIN_B3"
D G "SS_STAMP_DOWN" 1 73 "PIN_B4"
D G "SS_STAMP_UP" 1 74 "PIN_B5"
D G "SS_QR_DOWN" 1 75 "PIN_C1"
D G "SS_QR_UP" 1 76 "PIN_C2"
D G "SS_COIL_UP" 1 77 "PIN_G0"
D G "SS_COIL_DOWN" 1 78 "PIN_E7"
D G "SS_SCREW_UP" 1 79 "PIN_G3"
D G "SS_SCREW_DOWN" 1 80 "PIN_G4"
D G "SS_L" 1 81 "PIN_F0"
D G "SS_R" 1 82 "PIN_F1"
D G "SS_SCREW1" 1 83 "PIN_F2"
D G "SS_SCREW2" 1 84 "PIN_F3"
D G "SS_SCREW3" 1 85 "PIN_F4"
D G "SS_SCREW4" 1 86 "PIN_F5"
V G "lcd" 3 21 "{int1 unused,int1 rs,int1 rw,int1 enable,int4 data}"
D G "set_tris_lcd" 3 24 "(x)   set_tris_h(x)"
D G "lcd_type" 3 26 "2" "0=5x7 1 line, 1=5x10 1 line, 2=5x7 2 line"
D G "lcd_First_Line" 3 27 "0x00" "LCD RAM address for the first line"
D G "lcd_Second_Line" 3 28 "0x40" "LCD RAM address for the second line"
D G "lcd_Third_Line" 3 29 "0x14" "LCD RAM address for the third line"
D G "lcd_Forth_Line" 3 30 "0x54" "LCD RAM address for the forth line"
V G "LCD_INIT_STRING" 3 32 "int8[4]"
V G "LCD_WRITE" 3 35 "{int1 unused,int1 rs,int1 rw,int1 enable,int4 data}"
C L "lcd_send_nibble" 3 2 2 "FUNCTION"
V L "n" 3 39 "int8"
F G "lcd_send_nibble" 3 40 "void(int8 n)"
C L "lcd_send_nibble" 3 2 1 "FUNCTION"
C L "lcd_send_nibble" 3 2 1 "FUNCTION"
V L "address" 3 50 "int8"
V L "n" 3 50 "int8"
F G "lcd_send_byte" 3 51 "void(int8 address,int8 n)"
C L "lcd_send_byte" 3 2 1 "FUNCTION"
V L "x" 3 62 "int8"
V L "y" 3 62 "int8"
F G "lcd_gotoxy" 3 63 "void(int8 x,int8 y)"
V L "address" 3 64 "int8"
F G "lcd_init" 3 82 "void()"
V L "i" 3 83 "int8"
C L "lcd_init" 3 2 1 "FUNCTION"
V L "c" 3 98 "int8"
F G "lcd_putc" 3 99 "void(int8 c)"
C L "lcd_putc" 3 2 1 "FUNCTION"
C L "getc1USART" 4 3 1 "*"
C L "getc1USART" 4 4 1 "*"
C L "getc1USART" 4 5 1 "*"
C L "getc1USART" 4 6 1 "*"
C L "getc1USART" 4 7 1 "*"
C L "getc1USART" 4 8 1 "*"
C L "getc1USART" 4 9 1 "*"
F G "getc1USART" 4 13 "int8()"
V L "c" 4 14 "int8"
F G "putc1USART" 4 14 "void(int8 c)"
V L "s" 4 15 "int8"
F G "puts1USART" 4 15 "void(int8 s)"
F G "getc2USART" 4 16 "int8()"
V L "c" 4 17 "int8"
F G "putc2USART" 4 17 "void(int8 c)"
V L "s" 4 18 "int8"
F G "puts2USART" 4 18 "void(int8 s)" "-------------------   GET CHARACTER FROM USART1"
F G "getc1USART" 4 23 "int8()"
C L "putc1USART" 4 9 1 "FUNCTION"
V L "c" 4 30 "int8"
F G "putc1USART" 4 31 "void(int8 c)"
C L "puts1USART" 4 9 1 "FUNCTION"
V L "s" 4 38 "int8"
F G "puts1USART" 4 39 "void(int8 s)"
C L "getc2USART" 4 9 1 "FUNCTION"
F G "getc2USART" 4 47 "int8()"
C L "putc2USART" 4 9 1 "FUNCTION"
V L "c" 4 54 "int8"
F G "putc2USART" 4 55 "void(int8 c)"
C L "puts2USART" 4 9 1 "FUNCTION"
V L "s" 4 62 "int8"
F G "puts2USART" 4 63 "void(int8 s)"
T G "_Rob_" 1 111 "{int1 Reset_Flag,int1 Display_Spec,int1 CompleteSpec,int1 Get_Qr,int1 Ack_Qr,int1 ResCoils,int1 ResScrew,int8 Err_Coil,int8 ModeI}"
V G "Rob" 1 112 "_Rob_"
T G "_Spec_" 1 124 "{int16 C1h,int16 C1l,int16 C2h,int16 C2l,int16 C3h,int16 C3l,int8 BrSize,int8 TypeScr}"
V G "SPEC" 1 125 "_Spec_"
V G "sw" 1 127 "int8"
V G "QR_Packet" 1 128 "int8[20]"
V G "Qr_Show" 1 129 "int8[20]" "const char Vers[] = "V1.2.1";"
V G "TimeOut" 1 131 "int16"
V L "id" 1 134 "int8"
F G "GetStatus_SS" 1 134 "int8(int8 id)" "-------------------------------------------------------:PCF8574 READ"
V L "id" 1 137 "int8"
F G "GetStatus_SS" 1 138 "int8(int8 id)"
V L "idat" 1 139 "int8"
D G "_STDIO" 5 12 ""
D G "_STRING" 6 12 ""
D G "_STDDEF" 7 13 ""
D G "ptrdiff_t" 7 18 "unsigned int16"
D G "size_t" 7 21 "unsigned int8"
D G "wchar_t" 7 22 "char"
D G "NULL" 7 23 "0"
D G "offsetof" 7 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 6 19 10 "FUNCTION"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int8"
F G "memmove" 6 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
C L "strcopy" 6 19 3 "FUNCTION"
V L "s1" 6 53 "*int8"
V L "s2" 6 53 "*int8"
F G "strcopy" 6 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 55 "*int8"
C L "strncpy" 6 19 4 "FUNCTION"
V L "s1" 6 69 "*int8"
V L "s2" 6 69 "*int8"
V L "n" 6 69 "int8"
F G "strncpy" 6 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 71 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
V L "s1" 6 86 "*int8"
V L "s2" 6 86 "*int8"
F G "strcat" 6 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 88 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
V L "s1" 6 104 "*int8"
V L "s2" 6 104 "*int8"
V L "n" 6 104 "int8"
F G "strncat" 6 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 106 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
V L "s1" 6 128 "*int8"
V L "s2" 6 128 "*int8"
V L "n" 6 128 "int8"
F G "memcmp" 6 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 6 130 "*int8"
V L "su2" 6 130 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
V L "s1" 6 142 "*int8"
V L "s2" 6 142 "*int8"
F G "strcmp" 6 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 6 19 2 "FUNCTION"
V L "s1" 6 152 "*int8"
V L "s2" 6 152 "*int8"
F G "strcoll" 6 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 6 19 4 "FUNCTION"
V L "s1" 6 165 "*int8"
V L "s2" 6 165 "*int8"
V L "n" 6 165 "int8"
F G "strncmp" 6 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 6 19 3 "FUNCTION"
V L "s1" 6 177 "*int8"
V L "s2" 6 177 "*int8"
V L "n" 6 177 "int8"
F G "strxfrm" 6 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 6 179 "*int8"
V L "n1" 6 180 "int8"
C L "memchr" 6 19 3 "FUNCTION"
V L "s" 6 199 "*int8"
V L "c" 6 199 "int8"
V L "n" 6 199 "int8"
F G "memchr" 6 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 6 201 "int8"
V L "su" 6 202 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
V L "s" 6 213 "*int8"
V L "c" 6 213 "int8"
F G "strchr" 6 214 "*int8(*int8 s,int8 c)"
V L "s1" 6 225 "*int8"
V L "s2" 6 225 "*int8"
F G "strcspn" 6 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 227 "*int8"
V L "sc2" 6 227 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
V L "s1" 6 240 "*int8"
V L "s2" 6 240 "*int8"
F G "strpbrk" 6 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 242 "*int8"
V L "sc2" 6 242 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
V L "s" 6 255 "*int8"
V L "c" 6 255 "int8"
F G "strrchr" 6 256 "*int8(*int8 s,int8 c)"
V L "p" 6 257 "*int8"
V L "s1" 6 270 "*int8"
V L "s2" 6 270 "*int8"
F G "strspn" 6 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 6 272 "*int8"
V L "sc2" 6 272 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
V L "s1" 6 289 "*int8"
V L "s2" 6 289 "*int8"
F G "strstr" 6 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 6 291 "*int8"
V L "t" 6 291 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
V L "s1" 6 328 "*int8"
V L "s2" 6 328 "*int8"
F G "strtok" 6 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 6 330 "*int8"
V L "end" 6 330 "*int8"
V L "save" 6 331 "*int8"
V L "s" 6 377 "*int8"
F G "strlen" 6 378 "*int8(*int8 s)"
V L "sc" 6 379 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
V L "s1" 6 388 "*int8"
V L "s2" 6 388 "*int8"
F G "stricmp" 6 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 6 19 3 "FUNCTION"
V L "s" 6 402 "*int8"
F G "strlwr" 6 403 "*int8(*int8 s)"
V L "p" 6 404 "*int8"
D G "Operate_All_Process" 9 2 "0xFF"
D G "Check_Stamp" 9 3 "0xBF"
D G "Stamp_Only" 9 4 "0xAF"
V G "cnt" 9 6 "int16"
F G "_StatusIO_" 9 8 "void()"
F G "StampOnly" 9 9 "void()"
F G "Initial_SenSor" 9 10 "void()"
F G "Trig_Counter" 9 12 "void()"
V L "tot" 9 13 "int8"
F G "Buzzer_Alarm" 9 13 "void(int8 tot)"
F G "Buzzer_LongBeep" 9 14 "void()"
F G "Start_Buzzer" 9 15 "void()"
F G "Buzzer_Config" 9 16 "void()"
F G "Buzzer_Beep" 9 17 "void()"
F G "Display_CylinderError" 9 18 "void()"
F G "Clear_Led" 9 19 "void()"
F G "Diplay_Ready" 9 20 "void()"
F G "Clear_LCD" 9 21 "void()"
F G "_StatusIO_" 9 22 "void()"
F G "OperateAll" 9 24 "void()"
F G "Check_R_Stamp" 9 25 "void()"
V L "Mc" 9 26 "int8"
F G "ProcessMode" 9 26 "void(int8 Mc)"
V L "a" 9 27 "float"
V L "b" 9 27 "float"
V L "c" 9 27 "float"
F G "InsertData" 9 27 "void(float a,float b,float c)"
F G "Initial_StageRobot" 9 28 "void()"
F G "LED_RED" 9 30 "void()"
F G "LED_GREEN" 9 31 "void()"
F G "MOVE_GT" 9 33 "int8()"
F G "ORIGIN_GT" 9 34 "int8()"
F G "ORIGIN_STAMP" 9 36 "int8()"
F G "MOVE_STAMP" 9 37 "int8()"
F G "ORIGIN_PIN" 9 39 "int8()"
F G "MOVE_PIN" 9 40 "int8()"
F G "MOVE_BLOCK" 9 42 "int8()"
F G "ORIGIN_BLOCK" 9 43 "int8()"
F G "MOVE_QR" 9 45 "int8()"
F G "ORIGIN_QR" 9 46 "int8()"
F G "MOVE_LEFT" 9 48 "int8()"
F G "MOVE_RIGHT" 9 49 "int8()"
F G "MOVE_LEFT2" 9 51 "int8()"
F G "MOVE_RIGHT2" 9 52 "int8()"
F G "Resistance" 9 54 "int8()"
F G "Resistance3" 9 55 "int8()"
V L "Jc" 9 56 "int8"
F G "JudgeMentCoil" 9 56 "int8(int8 Jc)"
V L "sc1" 9 57 "int8"
V L "sc2" 9 57 "int8"
V L "sc3" 9 57 "int8"
F G "Check_Screw" 9 57 "int8(int8 sc1,int8 sc2,int8 sc3)" "-------------------   CYLINDER STAMP MOVE"
F G "MOVE_STAMP" 9 64 "int8()"
V L "ret" 9 65 "int1"
C L "ORIGIN_STAMP" 9 90 1 "FUNCTION"
F G "ORIGIN_STAMP" 9 92 "int8()"
V L "ret" 9 93 "int1"
C L "MOVE_PIN" 9 90 1 "FUNCTION"
F G "MOVE_PIN" 9 121 "int8()"
V L "ret" 9 122 "int1"
C L "ORIGIN_PIN" 9 90 1 "FUNCTION"
F G "ORIGIN_PIN" 9 149 "int8()"
V L "ret" 9 150 "int1"
C L "MOVE_GT" 9 90 1 "FUNCTION"
F G "MOVE_GT" 9 177 "int8()"
V L "ret" 9 178 "int1"
C L "ORIGIN_GT" 9 90 1 "FUNCTION"
F G "ORIGIN_GT" 9 205 "int8()"
V L "ret" 9 206 "int1"
C L "MOVE_BLOCK" 9 90 1 "FUNCTION"
F G "MOVE_BLOCK" 9 232 "int8()"
V L "ret" 9 233 "int1"
C L "ORIGIN_BLOCK" 9 90 1 "FUNCTION"
F G "ORIGIN_BLOCK" 9 260 "int8()"
V L "ret" 9 261 "int1"
C L "MOVE_QR" 9 90 1 "FUNCTION"
F G "MOVE_QR" 9 288 "int8()"
V L "ret" 9 289 "int1"
C L "MOVE_QR" 9 90 1 "FUNCTION"
C L "ORIGIN_QR" 9 90 1 "FUNCTION"
F G "ORIGIN_QR" 9 317 "int8()"
V L "ret" 9 318 "int1"
C L "MOVE_RIGHT" 9 90 1 "FUNCTION"
F G "MOVE_RIGHT" 9 344 "int8()"
V L "ret" 9 345 "int1"
C L "MOVE_LEFT" 9 90 1 "FUNCTION"
F G "MOVE_LEFT" 9 375 "int8()"
V L "ret" 9 376 "int1"
C L "MOVE_RIGHT2" 9 90 1 "FUNCTION"
F G "MOVE_RIGHT2" 9 407 "int8()"
V L "ret" 9 408 "int1"
C L "MOVE_LEFT2" 9 90 1 "FUNCTION"
F G "MOVE_LEFT2" 9 438 "int8()"
V L "ret" 9 439 "int1"
C L "Clear_LCD" 9 90 1 "FUNCTION"
F G "Clear_LCD" 9 476 "void()"
F G "Trig_Counter" 9 485 "void()"
C L "Start_Buzzer" 9 90 1 "FUNCTION"
F G "Start_Buzzer" 9 494 "void()"
V L "cnt" 9 495 "int8"
F G "Buzzer_Config" 9 506 "void()"
V L "cnt" 9 507 "int8"
C L "Buzzer_Beep" 9 90 1 "FUNCTION"
F G "Buzzer_Beep" 9 525 "void()"
C L "Buzzer_LongBeep" 9 90 1 "FUNCTION"
F G "Buzzer_LongBeep" 9 533 "void()"
C L "Buzzer_Alarm" 9 90 1 "FUNCTION"
V L "tot" 9 540 "int8"
F G "Buzzer_Alarm" 9 541 "void(int8 tot)"
C L "Display_CylinderError" 9 90 1 "FUNCTION"
F G "Display_CylinderError" 9 555 "void()"
C L "Clear_Led" 9 90 1 "FUNCTION"
F G "Clear_Led" 9 567 "void()"
C L "Diplay_Ready" 9 90 1 "FUNCTION"
F G "Diplay_Ready" 9 578 "void()"
C L "LED_GREEN" 9 90 1 "FUNCTION"
F G "LED_GREEN" 9 589 "void()"
C L "LED_RED" 9 90 1 "FUNCTION"
F G "LED_RED" 9 597 "void()"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
V L "Jc" 9 604 "int8"
F G "AdjudgeCoils" 9 605 "int8(int8 Jc)"
V L "ret" 9 606 "int1"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "AdjudgeCoils" 9 90 1 "FUNCTION"
C L "Resistance3" 9 90 5 "FUNCTION"
F G "Resistance3" 9 691 "int8()" "float Vbe = 0.00488;"
V L "Value1" 9 693 "float"
V L "Value2" 9 694 "float"
V L "Value3" 9 695 "float"
V L "V1" 9 696 "float"
V L "V2" 9 697 "float"
V L "V3" 9 698 "float"
V L "R1" 9 699 "float"
V L "R2" 9 700 "float"
V L "R3" 9 701 "float"
V L "Im" 9 702 "float"
V L "Im3" 9 703 "float"
V L "r1_flag" 9 704 "int1"
V L "r2_flag" 9 704 "int1"
V L "r3_flag" 9 704 "int1"
V L "Judge" 9 705 "int1"
V L "i" 9 706 "int8"
C L "Resistance3" 9 90 5 "FUNCTION"
C L "Resistance3" 9 90 1 "FUNCTION"
C L "Check_Screw" 9 90 1 "FUNCTION"
F G "Check_Screw" 9 830 "int8()"
V L "resp" 9 831 "int1"
C L "Check_Screw" 9 90 1 "FUNCTION"
C L "Check_Screw" 9 90 1 "FUNCTION"
C L "InsertData" 9 862 1 "*"
V L "a" 9 863 "float"
V L "b" 9 863 "float"
V L "c" 9 863 "float"
F G "InsertData" 9 864 "void(float a,float b,float c)" "printf("[%f,%f,%f]\r",a,b,c);"
C L "_StatusIO_" 9 862 1 "FUNCTION"
F G "_StatusIO_" 9 875 "void()"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "_StatusIO_" 9 862 1 "FUNCTION"
C L "StampOnly" 9 862 1 "FUNCTION"
F G "StampOnly" 9 1006 "void()"
C L "StampOnly" 9 862 1 "FUNCTION"
C L "StampOnly" 9 862 1 "FUNCTION"
C L "Initial_SenSor" 9 862 1 "FUNCTION"
F G "Initial_SenSor" 9 1049 "void()"
F G "OperateAll" 9 1056 "void()"
F G "Check_R_Stamp" 9 1090 "void()"
C L "Check_R_Stamp" 9 862 1 "FUNCTION"
C L "Check_R_Stamp" 9 862 1 "FUNCTION"
C L "Initial_StageRobot" 9 1124 1 "*"
F G "Initial_StageRobot" 9 1126 "void()"
V G "blink" 10 3 "int8" "-------------------------    FUCTION IN USE FOR SETTING SPEC"
F G "Config_Type" 10 8 "void()"
F G "Check_InterFace" 10 9 "void()"
F G "Config_BaudRate" 10 11 "int8()"
F G "JudgeMent_BaudRate" 10 12 "void()"
V L "BR" 10 13 "int8"
F G "Save_BaudRate" 10 13 "void(int8 BR)"
F G "Read_BaudRate" 10 14 "void()"
F G "Setting_SpecCoils" 10 16 "int8()"
F G "Setting_Coils" 10 17 "void()"
F G "Save_SpecCoils" 10 18 "void()"
F G "Read_SpecCoils" 10 19 "void()"
F G "Setting_Screw" 10 21 "void()"
F G "Setting_SpecScrew" 10 22 "int8()"
V L "TypeChk" 10 23 "int8"
F G "Save_TypeScrew" 10 23 "void(int8 TypeChk)"
F G "Read_TypeScrew" 10 24 "void()" "-------------------   JUDGEMENT BAUD RATE VALUE FOR INTERFACE BOXC WITH PC"
C L "Read_TypeScrew" 10 2 1 "FUNCTION"
F G "Config_Type" 10 34 "void()"
V L "mode" 10 35 "int8"
C L "Config_Type" 10 2 1 "FUNCTION"
C L "Config_Type" 10 2 1 "FUNCTION"
C L "Config_Type" 10 2 1 "FUNCTION"
C L "Config_Type" 10 2 1 "FUNCTION"
F G "Check_InterFace" 10 121 "void()"
C L "Setting_Screw" 10 2 1 "FUNCTION"
F G "Setting_Screw" 10 144 "void()"
C L "Setting_Screw" 10 2 1 "FUNCTION"
C L "Setting_SpecScrew" 10 2 1 "FUNCTION"
F G "Setting_SpecScrew" 10 174 "int8()"
V L "ret" 10 175 "int1"
C L "Setting_SpecScrew" 10 2 1 "FUNCTION"
C L "Setting_SpecScrew" 10 2 1 "FUNCTION"
C L "Setting_SpecScrew" 10 2 1 "FUNCTION"
C L "Save_TypeScrew" 10 2 1 "FUNCTION"
V L "TypeChk" 10 217 "int8"
F G "Save_TypeScrew" 10 218 "void(int8 TypeChk)"
C L "Read_TypeScrew" 10 2 1 "FUNCTION"
F G "Read_TypeScrew" 10 249 "void()"
C L "Read_TypeScrew" 10 2 1 "FUNCTION"
C L "Read_TypeScrew" 10 2 1 "FUNCTION"
C L "Setting_Coils" 10 2 3 "FUNCTION"
F G "Setting_Coils" 10 280 "void()"
C L "Setting_Coils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
F G "Setting_SpecCoils" 10 303 "int8()"
V L "ret" 10 304 "int1"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Setting_SpecCoils" 10 2 1 "FUNCTION"
C L "Save_SpecCoils" 10 2 1 "FUNCTION"
F G "Save_SpecCoils" 10 471 "void()"
V L "x" 10 472 "int8"
V L "y" 10 472 "int8"
C L "Save_SpecCoils" 10 2 1 "FUNCTION"
C L "Read_SpecCoils" 10 2 1 "FUNCTION"
F G "Read_SpecCoils" 10 506 "void()"
C L "JudgeMent_BaudRate" 10 2 1 "FUNCTION"
F G "JudgeMent_BaudRate" 10 527 "void()"
C L "JudgeMent_BaudRate" 10 2 1 "FUNCTION"
C L "Config_BaudRate" 10 2 1 "FUNCTION"
F G "Config_BaudRate" 10 556 "int8()"
V L "ret" 10 557 "int1"
C L "Config_BaudRate" 10 2 1 "FUNCTION"
C L "Config_BaudRate" 10 2 1 "FUNCTION"
C L "Config_BaudRate" 10 2 1 "FUNCTION"
C L "Save_BaudRate" 10 2 1 "FUNCTION"
V L "BR" 10 609 "int8"
F G "Save_BaudRate" 10 610 "void(int8 BR)"
C L "Save_BaudRate" 10 2 1 "FUNCTION"
C L "Read_BaudRate" 10 2 1 "FUNCTION"
F G "Read_BaudRate" 10 640 "void()"
C L "Read_BaudRate" 10 2 1 "FUNCTION"
C L "Read_BaudRate" 10 2 1 "FUNCTION"
C L "Read_BaudRate" 10 2 1 "FUNCTION"
V G "Rcv" 0 29 "int8"
V G "Cnt_TimeOut" 0 30 "int8" "**         Function in use"
F G "Rx1_Isr" 0 38 "void()"
F G "Rx2_Isr" 0 39 "void()"
F G "Reset_Isr" 0 40 "void()"
F G "Tim0_Isr" 0 41 "void()"
F G "Initial_Port" 0 43 "void()"
F G "ConfigTimer0" 0 44 "void()"
F G "Initial_Robot" 0 45 "void()"
F G "ProcessMode" 0 46 "void()" "-------------------   CONFIG TIMER0"
F G "ConfigTimer0" 0 52 "void()"
C L "Initial_Robot" 0 27 1 "FUNCTION"
F G "Initial_Robot" 0 60 "void()"
C L "Initial_Port" 0 93 1 "*"
F G "Initial_Port" 0 95 "void()"
F G "ProcessMode" 0 116 "void()"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 1 "FUNCTION"
C L "ProcessMode" 0 93 2 "FUNCTION"
C L "ProcessMode" 0 93 11 "FUNCTION"
C L "Rx1_Isr" 0 216 3 "*"
F G "Rx1_Isr" 0 223 "void()"
V L "Sequence" 0 228 "_Sequence"
C L "Rx1_Isr" 0 216 1 "FUNCTION"
C L "Rx1_Isr" 0 216 1 "FUNCTION"
C L "Rx1_Isr" 0 216 1 "FUNCTION"
C L "Rx2_Isr" 0 216 2 "FUNCTION"
F G "Rx2_Isr" 0 280 "void()"
V L "cnt_add" 0 281 "int8"
V L "Rcv2" 0 282 "int8"
C L "Rx2_Isr" 0 216 1 "FUNCTION"
C L "Tim0_Isr" 0 216 2 "FUNCTION"
F G "Tim0_Isr" 0 310 "void()"
C L "Reset_Isr" 0 216 2 "FUNCTION"
F G "Reset_Isr" 0 323 "void()"
C L "MAIN" 0 216 3 "FUNCTION"
F G "MAIN" 0 334 "void()"
C L "MAIN" 0 216 1 "FUNCTION"
C L "MAIN" 0 216 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "output_h" 1 0
F B "output_j" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "input_h" 0 0
F B "input_j" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "set_tris_h" 1 0
F B "set_tris_j" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "get_tris_h" 0 0
F B "get_tris_j" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
